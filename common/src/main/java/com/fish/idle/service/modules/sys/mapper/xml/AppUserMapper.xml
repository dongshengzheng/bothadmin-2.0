<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fish.idle.service.modules.sys.mapper.AppUserMapper">

    <!-- 通用查询结果列-->
    <sql id="Base_Column_List">
		id, login_name AS loginName, `password`, `name`, email, phone, identification, pub, score, open_id AS openId, prefer, address, head_img_url AS headImgUrl
	</sql>

    <select id="ById" resultType="AppUser">
		SELECT u.* FROM sys_app_user u WHERE u.id=#{0}
	</select>


    <!--根据姓名模糊匹配用户,且带有粉丝数目和作品数目(去除用户自己)-->
    <select id="searchUsersByName" resultType="AppUser">
		SELECT inner_.*,COUNT(w.id) works_count from
		(SELECT u.*,COUNT(f.id) follow_count
		from sys_app_user u
		LEFT JOIN dd_follow_history f ON u.id=f.target_id and f.type=1
		WHERE u.login_name LIKE CONCAT('%',#{0},'%')  and u.id != #{1}
		GROUP BY u.id)inner_
		LEFT JOIN dd_works w ON inner_.id=w.create_by
		GROUP BY inner_.id
	</select>

    <!--根据id查找用户,用且带有关注他人的数目,收藏作品数目-->
    <select id="searchMyInfo" resultType="AppUser">
		SELECT inner_.*,COUNT(f2.id) collection_count
		from (SELECT u.*,COUNT(f1.id) focus_other_count
		from sys_app_user u
		JOIN dd_follow_history f1 ON u.id=f1.user_id and f1.type=1
		where u.id=#{0})inner_
		JOIN dd_follow_history f2 ON inner_.id=f2.user_id and f2.type=0
	</select>

    <!--根据id查找该用户关注的用户,用且带有关注他人的数目,收藏作品数目-->
    <select id="searchFocusById" resultType="AppUser">
		SELECT outer_.*,COUNT(w.id) works_count from
		(SELECT inner_.*,COUNT(f.id) follow_count from
		(SELECT u.* from sys_app_user u join dd_follow_history f ON u.id=f.target_id and f.user_id=#{0} and f.type=1 WHERE f.del_flag=0)inner_
		LEFT JOIN dd_follow_history f ON inner_.id=f.target_id and f.type=1
		GROUP BY inner_.id)outer_
		LEFT JOIN dd_works w ON outer_.id=w.create_by
		GROUP BY outer_.id
	</select>

    <!--根据信息模糊匹配名字或id的用户集合(不包括自己)-->
    <select id="searchUserByNameAndId" resultType="AppUser">
		SELECT u.* from sys_app_user u
		WHERE u.id LIKE CONCAT('%',#{0},'%') and u.id !=#{1} or u.login_name like CONCAT('%',#{0},'%')
	</select>

    <!--根据id查找该用户的粉丝集合(级联查询出粉丝们的作品数和粉丝数)-->
    <select id="searchFollowUsersByUserId" resultType="AppUser">
		SELECT outer_.*,count(f2.id) follow_count from
		(SELECT inner_.*,count(w.id) works_count from
		(SELECT u.* from sys_app_user u join dd_follow_history f on u.id=f.user_id where f.target_id=#{0})inner_
		left join dd_works w on inner_.id=w.create_by GROUP BY inner_.id)outer_
		LEFT JOIN dd_follow_history f2 ON f2.target_id=outer_.id and f2.type=1
		GROUP BY outer_.id
	</select>

    <!--根据target_id和type查找followHistory中的user_id对应的user集合-->
    <select id="searchFollowHistoryUsers" resultType="AppUser">
		SELECT u.* from sys_app_user u where u.id in (
		select f.user_id from dd_follow_history f where f.type=#{0} and f.target_id=#{1} and f.del_flag=0)
	</select>


    <!--site端使用-->
    <!--根据姓名模糊匹配用户(按照'我'是否关注排序),且带有粉丝数目和作品数目(去除用户自己)-->
    <select id="siteSearchUsersByName" resultType="AppUser">
		select au.*,
		(select count(fh.id) from dd_follow_history fh where fh.user_id= #{3} and type =1 and fh.target_id=au.id and fh.del_flag=0) as follow,
		(select count(fh2.id) from dd_follow_history fh2 where type =1 and fh2.target_id=au.id and fh2.del_flag=0) as follow_count,
		(select count(w.id) from dd_works w where w.status =3 and w.create_by=au.id) as works_count
		from sys_app_user au
		where au.login_name like CONCAT('%',#{0},'%') and au.id!= #{3} order by follow desc
		LIMIT #{1} OFFSET #{2};
    </select>

    <select id="siteByIdContainWorksFocusCount" resultType="AppUser">
		select au.*,
		(select count(fh.id) from dd_follow_history fh where fh.type =1 and fh.target_id=#{0} and fh.del_flag=0) as follow_count,
		(select count(w.id) from dd_works w where w.status =3 and w.create_by=#{0} and w.del_flag=0 ) as works_count
		from sys_app_user au where au.id=#{0}
    </select>

    <!--根据id查询用户的粉丝(按照'我'是否关注排序)且带有粉丝数目和作品数目-->
    <select id="siteSearchFansByUserId" resultType="AppUser">
		select au.*,
		(select count(fh.id) from dd_follow_history fh where fh.user_id= #{3} and type =1 and fh.target_id=au.id and fh.del_flag=0) as follow,
		(select count(fh2.id) from dd_follow_history fh2 where type =1 and fh2.target_id=au.id and fh2.del_flag=0) as follow_count,
		(select count(w.id) from dd_works w where w.status =3 and w.create_by=au.id) as works_count
		from sys_app_user au where au.id
		in(select fh3.user_id from dd_follow_history fh3 where fh3.target_id=#{0} and fh3.type=1 and fh3.del_flag=0)
	    order by follow desc
		LIMIT #{1} OFFSET #{2};
	</select>

</mapper>