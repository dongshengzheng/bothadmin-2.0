<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fish.idle.service.modules.sys.mapper.UserMapper">

    <sql id="userColumns">login_name,name,password,rights,del_flag,role_id</sql>


    <select id="searchUser" resultType="User" parameterType="User">
        select u.*,count(fh.id) as follow_count from sys_user u
        left join dd_follow_history fh on fh.target_id = u.id
        <where>

        </where>
        group by u.id;
    </select>

    <!--根据姓名模糊匹配用户,且带有粉丝数目和作品数目(去除用户自己)-->
    <select id="searchUsersByName" resultType="User">
        SELECT inner_.*,COUNT(w.id) works_count from
               (SELECT u.*,COUNT(f.id) follow_count
               from sys_user u
               LEFT JOIN dd_follow_history f ON u.id=f.target_id and f.type=1
               WHERE u.name LIKE CONCAT('%',#{0},'%')  and u.id != #{1}
               GROUP BY u.id)inner_
               LEFT JOIN dd_works w ON inner_.id=w.create_by
               GROUP BY inner_.id
    </select>

    <!--根据id查找用户,用且带有关注他人的数目,收藏作品数目-->
    <select id="searchMyInfo" resultType="User">
        SELECT inner_.*,COUNT(f2.id) collection_count
        from (SELECT u.*,COUNT(f1.id) focus_other_count
              from sys_user u
              JOIN dd_follow_history f1 ON u.id=f1.user_id and f1.type=1
              where u.id=#{0})inner_
        JOIN dd_follow_history f2 ON inner_.id=f2.user_id and f2.type=0
    </select>

    <!--根据id查找该用户关注的用户,用且带有关注他人的数目,收藏作品数目-->
    <select id="searchFocusById" resultType="User">
        SELECT outer_.*,COUNT(w.id) works_count from
               (SELECT inner_.*,COUNT(f.id) follow_count from
               (SELECT u.* from sys_user u join dd_follow_history f ON u.id=f.target_id and f.user_id=#{0} and f.type=1 WHERE f.del_flag=0)inner_
                LEFT JOIN dd_follow_history f ON inner_.id=f.target_id and f.type=1
                GROUP BY inner_.id)outer_
                LEFT JOIN dd_works w ON outer_.id=w.create_by
        GROUP BY outer_.id
    </select>

    <!--根据信息模糊匹配名字或id的用户集合(不包括自己)-->
    <select id="searchUserByNameAndId" resultType="User">
        SELECT u.* from sys_user u
        WHERE u.id LIKE CONCAT('%',#{0},'%') and u.id !=#{1} or u.name like CONCAT('%',#{0},'%')
    </select>

    <!--根据id查找该用户的粉丝集合(级联查询出粉丝们的作品数和粉丝数)-->
    <select id="searchFollowUsersByUserId" resultType="User">
        SELECT outer_.*,count(f2.id) follow_count from
            (SELECT inner_.*,count(w.id) works_count from
                (SELECT u.* from sys_user u join dd_follow_history f on u.id=f.user_id where f.target_id=#{0})inner_
                 left join dd_works w on inner_.id=w.create_by GROUP BY inner_.id)outer_
             LEFT JOIN dd_follow_history f2 ON f2.target_id=outer_.id and f2.type=1
             GROUP BY outer_.id
    </select>

    <!--根据target_id和type查找followHistory中的user_id对应的user集合-->
    <select id="searchFollowHistoryUsers" resultType="User">
        SELECT u.* from sys_user u where u.id in (
        select f.user_id from dd_follow_history f where f.type=#{0} and f.target_id=#{1})
    </select>


    <!-- 判断用户名和密码 -->

</mapper>